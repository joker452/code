FUNCTION _Main_New : 
BASIC BLOCK 0 : 
  Def     = [ _T1 _T2 _T3 ]
  defDU   = [ ]
  redef   = [ _T1 _T2 _T3 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ ]
  liveInDU = [ ]
  liveOut = [ ]
  liveOutDU = [ ]
    1 _T1 = 4 [ _T1 ]
    2 parm _T1 [ ]
    3 _T2 =  call _Alloc [ _T2 ]
    4 _T3 = VTBL <_Main> [ _T2 _T3 ]
    5 *(_T2 + 0) = _T3 [ _T2 ]
END BY RETURN, result = _T2

FUNCTION _Base_New : 
BASIC BLOCK 0 : 
  Def     = [ _T4 _T5 _T6 ]
  defDU   = [ ]
  redef   = [ _T4 _T5 _T6 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ ]
  liveInDU = [ ]
  liveOut = [ ]
  liveOutDU = [ ]
    7 _T4 = 4 [ _T4 ]
    8 parm _T4 [ ]
    9 _T5 =  call _Alloc [ _T5 ]
    10 _T6 = VTBL <_Base> [ _T5 _T6 ]
    11 *(_T5 + 0) = _T6 [ _T5 ]
END BY RETURN, result = _T5

FUNCTION _Sub1_New : 
BASIC BLOCK 0 : 
  Def     = [ _T7 _T8 _T9 ]
  defDU   = [ ]
  redef   = [ _T7 _T8 _T9 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ ]
  liveInDU = [ ]
  liveOut = [ ]
  liveOutDU = [ ]
    13 _T7 = 4 [ _T7 ]
    14 parm _T7 [ ]
    15 _T8 =  call _Alloc [ _T8 ]
    16 _T9 = VTBL <_Sub1> [ _T8 _T9 ]
    17 *(_T8 + 0) = _T9 [ _T8 ]
END BY RETURN, result = _T8

FUNCTION _Sub2_New : 
BASIC BLOCK 0 : 
  Def     = [ _T10 _T11 _T12 ]
  defDU   = [ ]
  redef   = [ _T10 _T11 _T12 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ ]
  liveInDU = [ ]
  liveOut = [ ]
  liveOutDU = [ ]
    19 _T10 = 4 [ _T10 ]
    20 parm _T10 [ ]
    21 _T11 =  call _Alloc [ _T11 ]
    22 _T12 = VTBL <_Sub2> [ _T11 _T12 ]
    23 *(_T11 + 0) = _T12 [ _T11 ]
END BY RETURN, result = _T11

FUNCTION _Sub3_New : 
BASIC BLOCK 0 : 
  Def     = [ _T13 _T14 _T15 ]
  defDU   = [ ]
  redef   = [ _T13 _T14 _T15 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ ]
  liveInDU = [ ]
  liveOut = [ ]
  liveOutDU = [ ]
    25 _T13 = 4 [ _T13 ]
    26 parm _T13 [ ]
    27 _T14 =  call _Alloc [ _T14 ]
    28 _T15 = VTBL <_Sub3> [ _T14 _T15 ]
    29 *(_T14 + 0) = _T15 [ _T14 ]
END BY RETURN, result = _T14

FUNCTION _Sub4_New : 
BASIC BLOCK 0 : 
  Def     = [ _T16 _T17 _T18 ]
  defDU   = [ ]
  redef   = [ _T16 _T17 _T18 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ ]
  liveInDU = [ ]
  liveOut = [ ]
  liveOutDU = [ ]
    31 _T16 = 4 [ _T16 ]
    32 parm _T16 [ ]
    33 _T17 =  call _Alloc [ _T17 ]
    34 _T18 = VTBL <_Sub4> [ _T17 _T18 ]
    35 *(_T17 + 0) = _T18 [ _T17 ]
END BY RETURN, result = _T17

FUNCTION main : 
BASIC BLOCK 0 : 
  Def     = [ _T19 _T20 _T21 _T22 _T23 _T24 _T25 _T26 _T27 _T28 _T30 _T31 ]
  defDU   = [ (70, _T19) (86, _T19) (63, _T30) (63, _T31) (65, _T31) ]
  redef   = [ _T19 _T20 _T21 _T22 _T23 _T24 _T25 _T26 _T27 _T28 _T30 _T31 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ ]
  liveInDU = [ ]
  liveOut = [ _T19 _T30 _T31 ]
  liveOutDU = [ (70, _T19) (86, _T19) (63, _T30) (63, _T31) (65, _T31) ]
    37 _T24 =  call _Base_New [ _T24 ]
    38 _T19 = _T24 [ _T19 ]
    39 _T25 =  call _Sub1_New [ _T19 _T25 ]
    40 _T20 = _T25 [ _T19 _T20 ]
    41 _T26 =  call _Sub2_New [ _T19 _T20 _T26 ]
    42 _T21 = _T26 [ _T19 _T20 _T21 ]
    43 _T27 =  call _Sub3_New [ _T19 _T20 _T21 _T27 ]
    44 _T22 = _T27 [ _T19 _T20 _T21 _T22 ]
    45 _T28 =  call _Sub4_New [ _T19 _T20 _T21 _T22 _T28 ]
    46 _T23 = _T28 [ _T19 _T20 _T21 _T22 _T23 ]
    47 parm _T19 [ _T20 _T21 _T22 _T23 ]
    48 call _Main.printType [ _T20 _T21 _T22 _T23 ]
    49 parm _T20 [ _T21 _T22 _T23 ]
    50 call _Main.printType [ _T21 _T22 _T23 ]
    51 parm _T21 [ _T22 _T23 ]
    52 call _Main.printType [ _T22 _T23 ]
    53 parm _T22 [ _T23 ]
    54 call _Main.printType [ _T23 ]
    55 parm _T23 [ _T23 ]
    56 call _Main.printType [ _T23 ]
    57 _T19 = _T23 [ _T19 ]
    58 parm _T19 [ _T19 ]
    59 call _Main.printType [ _T19 ]
    60 _T30 = VTBL <_Sub1> [ _T19 _T30 ]
    61 _T31 = *(_T19 + 0) [ _T19 _T30 _T31 ]
END BY BRANCH, goto 1
BASIC BLOCK 1 : 
  Def     = [ _T29 ]
  defDU   = [ ]
  redef   = [ _T29 ]
  liveUseDU = [ (63, _T30) (63, _T31) ]
  liveUse = [ _T30 _T31 ]
  liveIn  = [ _T19 _T30 _T31 ]
  liveInDU = [ (70, _T19) (86, _T19) (63, _T30) (63, _T31) (65, _T31) ]
  liveOut = [ _T19 _T30 _T31 ]
  liveOutDU = [ (70, _T19) (86, _T19) (63, _T30) (65, _T31) ]
    63 _T29 = (_T30 == _T31) [ _T19 _T29 _T30 _T31 ]
END BY BGTZ, if _T29 = 
    1 : goto 4; 0 : goto 2
BASIC BLOCK 2 : 
  Def     = [ ]
  defDU   = [ (63, _T31) (65, _T31) ]
  redef   = [ _T31 ]
  liveUseDU = [ (65, _T31) ]
  liveUse = [ _T31 ]
  liveIn  = [ _T19 _T30 _T31 ]
  liveInDU = [ (70, _T19) (86, _T19) (63, _T30) (65, _T31) ]
  liveOut = [ _T19 _T30 _T31 ]
  liveOutDU = [ (70, _T19) (86, _T19) (63, _T30) (63, _T31) (65, _T31) ]
    65 _T31 = *(_T31 + 0) [ _T19 _T30 _T31 ]
END BY BGTZ, if _T31 = 
    1 : goto 1; 0 : goto 3
BASIC BLOCK 3 : 
  Def     = [ _T32 _T33 _T34 _T35 _T36 _T37 _T38 ]
  defDU   = [ ]
  redef   = [ _T32 _T33 _T34 _T35 _T36 _T37 _T38 ]
  liveUseDU = [ (70, _T19) ]
  liveUse = [ _T19 ]
  liveIn  = [ _T19 ]
  liveInDU = [ (70, _T19) (86, _T19) ]
  liveOut = [ _T19 ]
  liveOutDU = [ (86, _T19) ]
    67 _T32 = "Decaf runtime error: " [ _T32 _T19 ]
    68 parm _T32 [ _T19 ]
    69 call _PrintString [ _T19 ]
    70 _T33 = *(_T19 + 0) [ _T33 _T19 ]
    71 _T34 = *(_T33 + 4) [ _T34 _T19 ]
    72 parm _T34 [ _T19 ]
    73 call _PrintString [ _T19 ]
    74 _T35 = " cannot be cast to " [ _T19 _T35 ]
    75 parm _T35 [ _T19 ]
    76 call _PrintString [ _T19 ]
    77 _T36 = VTBL <_Sub1> [ _T19 _T36 ]
    78 _T37 = *(_T36 + 4) [ _T19 _T37 ]
    79 parm _T37 [ _T19 ]
    80 call _PrintString [ _T19 ]
    81 _T38 = "\n" [ _T19 _T38 ]
    82 parm _T38 [ _T19 ]
    83 call _PrintString [ _T19 ]
    84 call _Halt [ _T19 ]
END BY BRANCH, goto 4
BASIC BLOCK 4 : 
  Def     = [ _T20 ]
  defDU   = [ ]
  redef   = [ _T20 ]
  liveUseDU = [ (86, _T19) ]
  liveUse = [ _T19 ]
  liveIn  = [ _T19 ]
  liveInDU = [ (86, _T19) ]
  liveOut = [ ]
  liveOutDU = [ ]
    86 _T20 = _T19 [ _T20 ]
    87 parm _T20 [ ]
    88 call _Main.printType [ ]
END BY RETURN, void result

FUNCTION _Main.printType : 
BASIC BLOCK 0 : 
  Def     = [ _T40 _T41 ]
  defDU   = [ (93, _T40) (93, _T41) (95, _T41) ]
  redef   = [ _T40 _T41 ]
  liveUseDU = [ (91, _T0) ]
  liveUse = [ _T0 ]
  liveIn  = [ _T0 ]
  liveInDU = [ (91, _T0) (105, _T0) (119, _T0) (133, _T0) (147, _T0) ]
  liveOut = [ _T0 _T40 _T41 ]
  liveOutDU = [ (105, _T0) (119, _T0) (133, _T0) (147, _T0) (93, _T40) (93, _T41) (95, _T41) ]
    90 _T40 = VTBL <_Sub4> [ _T0 _T40 ]
    91 _T41 = *(_T0 + 0) [ _T0 _T40 _T41 ]
END BY BRANCH, goto 1
BASIC BLOCK 1 : 
  Def     = [ _T39 ]
  defDU   = [ (99, _T39) ]
  redef   = [ _T39 ]
  liveUseDU = [ (93, _T40) (93, _T41) ]
  liveUse = [ _T40 _T41 ]
  liveIn  = [ _T0 _T40 _T41 ]
  liveInDU = [ (105, _T0) (119, _T0) (133, _T0) (147, _T0) (93, _T40) (93, _T41) (95, _T41) ]
  liveOut = [ _T0 _T39 _T40 _T41 ]
  liveOutDU = [ (105, _T0) (119, _T0) (133, _T0) (147, _T0) (99, _T39) (93, _T40) (95, _T41) ]
    93 _T39 = (_T40 == _T41) [ _T0 _T39 _T40 _T41 ]
END BY BGTZ, if _T39 = 
    1 : goto 4; 0 : goto 2
BASIC BLOCK 2 : 
  Def     = [ ]
  defDU   = [ (93, _T41) (95, _T41) ]
  redef   = [ _T41 ]
  liveUseDU = [ (95, _T41) ]
  liveUse = [ _T41 ]
  liveIn  = [ _T0 _T40 _T41 ]
  liveInDU = [ (105, _T0) (119, _T0) (133, _T0) (147, _T0) (93, _T40) (95, _T41) ]
  liveOut = [ _T0 _T40 _T41 ]
  liveOutDU = [ (105, _T0) (119, _T0) (133, _T0) (147, _T0) (93, _T40) (93, _T41) (95, _T41) ]
    95 _T41 = *(_T41 + 0) [ _T0 _T40 _T41 ]
END BY BGTZ, if _T41 = 
    1 : goto 1; 0 : goto 3
BASIC BLOCK 3 : 
  Def     = [ _T39 ]
  defDU   = [ (99, _T39) ]
  redef   = [ _T39 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ _T0 ]
  liveInDU = [ (105, _T0) (119, _T0) (133, _T0) (147, _T0) ]
  liveOut = [ _T0 _T39 ]
  liveOutDU = [ (105, _T0) (119, _T0) (133, _T0) (147, _T0) (99, _T39) ]
    97 _T39 = 0 [ _T0 _T39 ]
END BY BRANCH, goto 4
BASIC BLOCK 4 : 
  Def     = [ ]
  defDU   = [ ]
  redef   = [ ]
  liveUseDU = [ (99, _T39) ]
  liveUse = [ _T39 ]
  liveIn  = [ _T0 _T39 ]
  liveInDU = [ (105, _T0) (119, _T0) (133, _T0) (147, _T0) (99, _T39) ]
  liveOut = [ _T0 ]
  liveOutDU = [ (105, _T0) (119, _T0) (133, _T0) (147, _T0) ]
END BY BEQZ, if _T39 = 
    0 : goto 6; 1 : goto 5
BASIC BLOCK 5 : 
  Def     = [ _T42 ]
  defDU   = [ ]
  redef   = [ _T42 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ ]
  liveInDU = [ ]
  liveOut = [ ]
  liveOutDU = [ ]
    100 _T42 = "Sub4\n" [ _T42 ]
    101 parm _T42 [ ]
    102 call _PrintString [ ]
END BY BRANCH, goto 30
BASIC BLOCK 6 : 
  Def     = [ _T44 _T45 ]
  defDU   = [ (107, _T44) (107, _T45) (109, _T45) ]
  redef   = [ _T44 _T45 ]
  liveUseDU = [ (105, _T0) ]
  liveUse = [ _T0 ]
  liveIn  = [ _T0 ]
  liveInDU = [ (105, _T0) (119, _T0) (133, _T0) (147, _T0) ]
  liveOut = [ _T0 _T44 _T45 ]
  liveOutDU = [ (119, _T0) (133, _T0) (147, _T0) (107, _T44) (107, _T45) (109, _T45) ]
    104 _T44 = VTBL <_Sub3> [ _T0 _T44 ]
    105 _T45 = *(_T0 + 0) [ _T0 _T44 _T45 ]
END BY BRANCH, goto 7
BASIC BLOCK 7 : 
  Def     = [ _T43 ]
  defDU   = [ (113, _T43) ]
  redef   = [ _T43 ]
  liveUseDU = [ (107, _T44) (107, _T45) ]
  liveUse = [ _T44 _T45 ]
  liveIn  = [ _T0 _T44 _T45 ]
  liveInDU = [ (119, _T0) (133, _T0) (147, _T0) (107, _T44) (107, _T45) (109, _T45) ]
  liveOut = [ _T0 _T43 _T44 _T45 ]
  liveOutDU = [ (119, _T0) (133, _T0) (147, _T0) (113, _T43) (107, _T44) (109, _T45) ]
    107 _T43 = (_T44 == _T45) [ _T0 _T43 _T44 _T45 ]
END BY BGTZ, if _T43 = 
    1 : goto 10; 0 : goto 8
BASIC BLOCK 8 : 
  Def     = [ ]
  defDU   = [ (107, _T45) (109, _T45) ]
  redef   = [ _T45 ]
  liveUseDU = [ (109, _T45) ]
  liveUse = [ _T45 ]
  liveIn  = [ _T0 _T44 _T45 ]
  liveInDU = [ (119, _T0) (133, _T0) (147, _T0) (107, _T44) (109, _T45) ]
  liveOut = [ _T0 _T44 _T45 ]
  liveOutDU = [ (119, _T0) (133, _T0) (147, _T0) (107, _T44) (107, _T45) (109, _T45) ]
    109 _T45 = *(_T45 + 0) [ _T0 _T44 _T45 ]
END BY BGTZ, if _T45 = 
    1 : goto 7; 0 : goto 9
BASIC BLOCK 9 : 
  Def     = [ _T43 ]
  defDU   = [ (113, _T43) ]
  redef   = [ _T43 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ _T0 ]
  liveInDU = [ (119, _T0) (133, _T0) (147, _T0) ]
  liveOut = [ _T0 _T43 ]
  liveOutDU = [ (119, _T0) (133, _T0) (147, _T0) (113, _T43) ]
    111 _T43 = 0 [ _T0 _T43 ]
END BY BRANCH, goto 10
BASIC BLOCK 10 : 
  Def     = [ ]
  defDU   = [ ]
  redef   = [ ]
  liveUseDU = [ (113, _T43) ]
  liveUse = [ _T43 ]
  liveIn  = [ _T0 _T43 ]
  liveInDU = [ (119, _T0) (133, _T0) (147, _T0) (113, _T43) ]
  liveOut = [ _T0 ]
  liveOutDU = [ (119, _T0) (133, _T0) (147, _T0) ]
END BY BEQZ, if _T43 = 
    0 : goto 12; 1 : goto 11
BASIC BLOCK 11 : 
  Def     = [ _T46 ]
  defDU   = [ ]
  redef   = [ _T46 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ ]
  liveInDU = [ ]
  liveOut = [ ]
  liveOutDU = [ ]
    114 _T46 = "Sub3\n" [ _T46 ]
    115 parm _T46 [ ]
    116 call _PrintString [ ]
END BY BRANCH, goto 30
BASIC BLOCK 12 : 
  Def     = [ _T48 _T49 ]
  defDU   = [ (121, _T48) (121, _T49) (123, _T49) ]
  redef   = [ _T48 _T49 ]
  liveUseDU = [ (119, _T0) ]
  liveUse = [ _T0 ]
  liveIn  = [ _T0 ]
  liveInDU = [ (119, _T0) (133, _T0) (147, _T0) ]
  liveOut = [ _T0 _T48 _T49 ]
  liveOutDU = [ (133, _T0) (147, _T0) (121, _T48) (121, _T49) (123, _T49) ]
    118 _T48 = VTBL <_Sub2> [ _T0 _T48 ]
    119 _T49 = *(_T0 + 0) [ _T0 _T48 _T49 ]
END BY BRANCH, goto 13
BASIC BLOCK 13 : 
  Def     = [ _T47 ]
  defDU   = [ (127, _T47) ]
  redef   = [ _T47 ]
  liveUseDU = [ (121, _T48) (121, _T49) ]
  liveUse = [ _T48 _T49 ]
  liveIn  = [ _T0 _T48 _T49 ]
  liveInDU = [ (133, _T0) (147, _T0) (121, _T48) (121, _T49) (123, _T49) ]
  liveOut = [ _T0 _T47 _T48 _T49 ]
  liveOutDU = [ (133, _T0) (147, _T0) (127, _T47) (121, _T48) (123, _T49) ]
    121 _T47 = (_T48 == _T49) [ _T0 _T48 _T49 _T47 ]
END BY BGTZ, if _T47 = 
    1 : goto 16; 0 : goto 14
BASIC BLOCK 14 : 
  Def     = [ ]
  defDU   = [ (121, _T49) (123, _T49) ]
  redef   = [ _T49 ]
  liveUseDU = [ (123, _T49) ]
  liveUse = [ _T49 ]
  liveIn  = [ _T0 _T48 _T49 ]
  liveInDU = [ (133, _T0) (147, _T0) (121, _T48) (123, _T49) ]
  liveOut = [ _T0 _T48 _T49 ]
  liveOutDU = [ (133, _T0) (147, _T0) (121, _T48) (121, _T49) (123, _T49) ]
    123 _T49 = *(_T49 + 0) [ _T0 _T48 _T49 ]
END BY BGTZ, if _T49 = 
    1 : goto 13; 0 : goto 15
BASIC BLOCK 15 : 
  Def     = [ _T47 ]
  defDU   = [ (127, _T47) ]
  redef   = [ _T47 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ _T0 ]
  liveInDU = [ (133, _T0) (147, _T0) ]
  liveOut = [ _T0 _T47 ]
  liveOutDU = [ (133, _T0) (147, _T0) (127, _T47) ]
    125 _T47 = 0 [ _T0 _T47 ]
END BY BRANCH, goto 16
BASIC BLOCK 16 : 
  Def     = [ ]
  defDU   = [ ]
  redef   = [ ]
  liveUseDU = [ (127, _T47) ]
  liveUse = [ _T47 ]
  liveIn  = [ _T0 _T47 ]
  liveInDU = [ (133, _T0) (147, _T0) (127, _T47) ]
  liveOut = [ _T0 ]
  liveOutDU = [ (133, _T0) (147, _T0) ]
END BY BEQZ, if _T47 = 
    0 : goto 18; 1 : goto 17
BASIC BLOCK 17 : 
  Def     = [ _T50 ]
  defDU   = [ ]
  redef   = [ _T50 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ ]
  liveInDU = [ ]
  liveOut = [ ]
  liveOutDU = [ ]
    128 _T50 = "Sub2\n" [ _T50 ]
    129 parm _T50 [ ]
    130 call _PrintString [ ]
END BY BRANCH, goto 30
BASIC BLOCK 18 : 
  Def     = [ _T52 _T53 ]
  defDU   = [ (135, _T52) (135, _T53) (137, _T53) ]
  redef   = [ _T52 _T53 ]
  liveUseDU = [ (133, _T0) ]
  liveUse = [ _T0 ]
  liveIn  = [ _T0 ]
  liveInDU = [ (133, _T0) (147, _T0) ]
  liveOut = [ _T0 _T52 _T53 ]
  liveOutDU = [ (147, _T0) (135, _T52) (135, _T53) (137, _T53) ]
    132 _T52 = VTBL <_Sub1> [ _T0 _T52 ]
    133 _T53 = *(_T0 + 0) [ _T0 _T52 _T53 ]
END BY BRANCH, goto 19
BASIC BLOCK 19 : 
  Def     = [ _T51 ]
  defDU   = [ (141, _T51) ]
  redef   = [ _T51 ]
  liveUseDU = [ (135, _T52) (135, _T53) ]
  liveUse = [ _T52 _T53 ]
  liveIn  = [ _T0 _T52 _T53 ]
  liveInDU = [ (147, _T0) (135, _T52) (135, _T53) (137, _T53) ]
  liveOut = [ _T0 _T51 _T52 _T53 ]
  liveOutDU = [ (147, _T0) (141, _T51) (135, _T52) (137, _T53) ]
    135 _T51 = (_T52 == _T53) [ _T0 _T51 _T52 _T53 ]
END BY BGTZ, if _T51 = 
    1 : goto 22; 0 : goto 20
BASIC BLOCK 20 : 
  Def     = [ ]
  defDU   = [ (135, _T53) (137, _T53) ]
  redef   = [ _T53 ]
  liveUseDU = [ (137, _T53) ]
  liveUse = [ _T53 ]
  liveIn  = [ _T0 _T52 _T53 ]
  liveInDU = [ (147, _T0) (135, _T52) (137, _T53) ]
  liveOut = [ _T0 _T52 _T53 ]
  liveOutDU = [ (147, _T0) (135, _T52) (135, _T53) (137, _T53) ]
    137 _T53 = *(_T53 + 0) [ _T0 _T52 _T53 ]
END BY BGTZ, if _T53 = 
    1 : goto 19; 0 : goto 21
BASIC BLOCK 21 : 
  Def     = [ _T51 ]
  defDU   = [ (141, _T51) ]
  redef   = [ _T51 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ _T0 ]
  liveInDU = [ (147, _T0) ]
  liveOut = [ _T0 _T51 ]
  liveOutDU = [ (147, _T0) (141, _T51) ]
    139 _T51 = 0 [ _T0 _T51 ]
END BY BRANCH, goto 22
BASIC BLOCK 22 : 
  Def     = [ ]
  defDU   = [ ]
  redef   = [ ]
  liveUseDU = [ (141, _T51) ]
  liveUse = [ _T51 ]
  liveIn  = [ _T0 _T51 ]
  liveInDU = [ (147, _T0) (141, _T51) ]
  liveOut = [ _T0 ]
  liveOutDU = [ (147, _T0) ]
END BY BEQZ, if _T51 = 
    0 : goto 24; 1 : goto 23
BASIC BLOCK 23 : 
  Def     = [ _T54 ]
  defDU   = [ ]
  redef   = [ _T54 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ ]
  liveInDU = [ ]
  liveOut = [ ]
  liveOutDU = [ ]
    142 _T54 = "Sub1\n" [ _T54 ]
    143 parm _T54 [ ]
    144 call _PrintString [ ]
END BY BRANCH, goto 30
BASIC BLOCK 24 : 
  Def     = [ _T56 _T57 ]
  defDU   = [ (149, _T56) (149, _T57) (151, _T57) ]
  redef   = [ _T56 _T57 ]
  liveUseDU = [ (147, _T0) ]
  liveUse = [ _T0 ]
  liveIn  = [ _T0 ]
  liveInDU = [ (147, _T0) ]
  liveOut = [ _T56 _T57 ]
  liveOutDU = [ (149, _T56) (149, _T57) (151, _T57) ]
    146 _T56 = VTBL <_Base> [ _T0 _T56 ]
    147 _T57 = *(_T0 + 0) [ _T56 _T57 ]
END BY BRANCH, goto 25
BASIC BLOCK 25 : 
  Def     = [ _T55 ]
  defDU   = [ (155, _T55) ]
  redef   = [ _T55 ]
  liveUseDU = [ (149, _T56) (149, _T57) ]
  liveUse = [ _T56 _T57 ]
  liveIn  = [ _T56 _T57 ]
  liveInDU = [ (149, _T56) (149, _T57) (151, _T57) ]
  liveOut = [ _T55 _T56 _T57 ]
  liveOutDU = [ (155, _T55) (149, _T56) (151, _T57) ]
    149 _T55 = (_T56 == _T57) [ _T55 _T56 _T57 ]
END BY BGTZ, if _T55 = 
    1 : goto 28; 0 : goto 26
BASIC BLOCK 26 : 
  Def     = [ ]
  defDU   = [ (149, _T57) (151, _T57) ]
  redef   = [ _T57 ]
  liveUseDU = [ (151, _T57) ]
  liveUse = [ _T57 ]
  liveIn  = [ _T56 _T57 ]
  liveInDU = [ (149, _T56) (151, _T57) ]
  liveOut = [ _T56 _T57 ]
  liveOutDU = [ (149, _T56) (149, _T57) (151, _T57) ]
    151 _T57 = *(_T57 + 0) [ _T56 _T57 ]
END BY BGTZ, if _T57 = 
    1 : goto 25; 0 : goto 27
BASIC BLOCK 27 : 
  Def     = [ _T55 ]
  defDU   = [ (155, _T55) ]
  redef   = [ _T55 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ ]
  liveInDU = [ ]
  liveOut = [ _T55 ]
  liveOutDU = [ (155, _T55) ]
    153 _T55 = 0 [ _T55 ]
END BY BRANCH, goto 28
BASIC BLOCK 28 : 
  Def     = [ ]
  defDU   = [ ]
  redef   = [ ]
  liveUseDU = [ (155, _T55) ]
  liveUse = [ _T55 ]
  liveIn  = [ _T55 ]
  liveInDU = [ (155, _T55) ]
  liveOut = [ ]
  liveOutDU = [ ]
END BY BEQZ, if _T55 = 
    0 : goto 30; 1 : goto 29
BASIC BLOCK 29 : 
  Def     = [ _T58 ]
  defDU   = [ ]
  redef   = [ _T58 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ ]
  liveInDU = [ ]
  liveOut = [ ]
  liveOutDU = [ ]
    156 _T58 = "Base\n" [ _T58 ]
    157 parm _T58 [ ]
    158 call _PrintString [ ]
END BY BRANCH, goto 30
BASIC BLOCK 30 : 
  Def     = [ ]
  defDU   = [ ]
  redef   = [ ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ ]
  liveInDU = [ ]
  liveOut = [ ]
  liveOutDU = [ ]
END BY RETURN, void result

