FUNCTION _Main_New : 
BASIC BLOCK 0 : 
  Def     = [ _T2 _T3 _T4 _T5 ]
  defDU   = [ ]
  redef   = [ _T2 _T3 _T4 _T5 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ ]
  liveInDU = [ ]
  liveOut = [ ]
  liveOutDU = [ ]
    1 _T2 = 8 [ _T2 ]
    2 parm _T2 [ ]
    3 _T3 =  call _Alloc [ _T3 ]
    4 _T4 = 0 [ _T3 _T4 ]
    5 *(_T3 + 4) = _T4 [ _T3 ]
    6 _T5 = VTBL <_Main> [ _T3 _T5 ]
    7 *(_T3 + 0) = _T5 [ _T3 ]
END BY RETURN, result = _T3

FUNCTION main : 
BASIC BLOCK 0 : 
  Def     = [ _T6 _T7 _T8 _T9 _T10 ]
  defDU   = [ ]
  redef   = [ _T6 _T7 _T8 _T9 _T10 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ ]
  liveInDU = [ ]
  liveOut = [ ]
  liveOutDU = [ ]
    9 _T6 =  call _Main_New [ _T6 ]
    10 _T7 = 1 [ _T6 _T7 ]
    11 _T8 = - _T7 [ _T6 _T8 ]
    12 parm _T6 [ _T6 _T8 ]
    13 parm _T8 [ _T6 ]
    14 _T9 = *(_T6 + 0) [ _T9 ]
    15 _T10 = *(_T9 + 8) [ _T10 ]
    16 call _T10 [ ]
END BY RETURN, void result

FUNCTION _Main.create : 
BASIC BLOCK 0 : 
  Def     = [ _T11 _T12 _T13 ]
  defDU   = [ ]
  redef   = [ _T11 _T12 _T13 ]
  liveUseDU = [ (18, _T0) (20, _T1) ]
  liveUse = [ _T0 _T1 ]
  liveIn  = [ _T0 _T1 ]
  liveInDU = [ (18, _T0) (41, _T0) (20, _T1) (28, _T1) (32, _T1) ]
  liveOut = [ _T0 _T1 ]
  liveOutDU = [ (18, _T0) (41, _T0) (20, _T1) (28, _T1) (32, _T1) ]
    18 _T11 = *(_T0 + 4) [ _T0 _T1 ]
    19 _T12 = 0 [ _T0 _T1 _T12 ]
    20 _T13 = (_T1 < _T12) [ _T0 _T1 _T13 ]
END BY BEQZ, if _T13 = 
    0 : goto 2; 1 : goto 1
BASIC BLOCK 1 : 
  Def     = [ _T14 ]
  defDU   = [ ]
  redef   = [ _T14 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ _T0 _T1 ]
  liveInDU = [ (18, _T0) (41, _T0) (20, _T1) (28, _T1) (32, _T1) ]
  liveOut = [ _T0 _T1 ]
  liveOutDU = [ (18, _T0) (41, _T0) (20, _T1) (28, _T1) (32, _T1) ]
    22 _T14 = "Decaf runtime error: Cannot create negative-sized array\n" [ _T0 _T1 _T14 ]
    23 parm _T14 [ _T0 _T1 ]
    24 call _PrintString [ _T0 _T1 ]
    25 call _Halt [ _T0 _T1 ]
END BY BRANCH, goto 2
BASIC BLOCK 2 : 
  Def     = [ _T15 _T16 _T17 _T18 _T19 ]
  defDU   = [ (36, _T15) (38, _T15) (36, _T17) (38, _T18) (41, _T18) (39, _T19) ]
  redef   = [ _T15 _T16 _T17 _T18 _T19 ]
  liveUseDU = [ (28, _T1) (32, _T1) ]
  liveUse = [ _T1 ]
  liveIn  = [ _T0 _T1 ]
  liveInDU = [ (18, _T0) (41, _T0) (20, _T1) (28, _T1) (32, _T1) ]
  liveOut = [ _T0 _T1 _T15 _T17 _T18 _T19 ]
  liveOutDU = [ (18, _T0) (41, _T0) (20, _T1) (28, _T1) (32, _T1) (36, _T15) (38, _T15) (36, _T17) (38, _T18) (41, _T18) (39, _T19) ]
    27 _T15 = 4 [ _T0 _T1 _T15 ]
    28 _T16 = (_T15 * _T1) [ _T0 _T16 _T1 _T15 ]
    29 _T17 = (_T15 + _T16) [ _T0 _T1 _T17 _T15 ]
    30 parm _T17 [ _T0 _T1 _T17 _T15 ]
    31 _T18 =  call _Alloc [ _T0 _T1 _T17 _T18 _T15 ]
    32 *(_T18 + 0) = _T1 [ _T0 _T1 _T17 _T18 _T15 ]
    33 _T19 = 0 [ _T0 _T1 _T17 _T18 _T19 _T15 ]
    34 _T18 = (_T18 + _T17) [ _T0 _T1 _T17 _T18 _T19 _T15 ]
END BY BRANCH, goto 3
BASIC BLOCK 3 : 
  Def     = [ ]
  defDU   = [ (36, _T17) ]
  redef   = [ _T17 ]
  liveUseDU = [ (36, _T15) (36, _T17) ]
  liveUse = [ _T15 _T17 ]
  liveIn  = [ _T0 _T1 _T15 _T17 _T18 _T19 ]
  liveInDU = [ (18, _T0) (41, _T0) (20, _T1) (28, _T1) (32, _T1) (36, _T15) (38, _T15) (36, _T17) (38, _T18) (41, _T18) (39, _T19) ]
  liveOut = [ _T0 _T1 _T15 _T17 _T18 _T19 ]
  liveOutDU = [ (18, _T0) (41, _T0) (20, _T1) (28, _T1) (32, _T1) (36, _T15) (38, _T15) (36, _T17) (38, _T18) (41, _T18) (39, _T19) ]
    36 _T17 = (_T17 - _T15) [ _T0 _T1 _T17 _T18 _T19 _T15 ]
END BY BEQZ, if _T17 = 
    0 : goto 5; 1 : goto 4
BASIC BLOCK 4 : 
  Def     = [ ]
  defDU   = [ (38, _T18) (41, _T18) ]
  redef   = [ _T18 ]
  liveUseDU = [ (38, _T15) (38, _T18) (39, _T19) ]
  liveUse = [ _T15 _T18 _T19 ]
  liveIn  = [ _T0 _T1 _T15 _T17 _T18 _T19 ]
  liveInDU = [ (18, _T0) (41, _T0) (20, _T1) (28, _T1) (32, _T1) (36, _T15) (38, _T15) (36, _T17) (38, _T18) (39, _T19) ]
  liveOut = [ _T0 _T1 _T15 _T17 _T18 _T19 ]
  liveOutDU = [ (18, _T0) (41, _T0) (20, _T1) (28, _T1) (32, _T1) (36, _T15) (38, _T15) (36, _T17) (38, _T18) (41, _T18) (39, _T19) ]
    38 _T18 = (_T18 - _T15) [ _T0 _T1 _T17 _T18 _T19 _T15 ]
    39 *(_T18 + 0) = _T19 [ _T0 _T1 _T17 _T18 _T19 _T15 ]
END BY BRANCH, goto 3
BASIC BLOCK 5 : 
  Def     = [ ]
  defDU   = [ ]
  redef   = [ ]
  liveUseDU = [ (41, _T0) (41, _T18) ]
  liveUse = [ _T0 _T18 ]
  liveIn  = [ _T0 _T1 _T18 ]
  liveInDU = [ (18, _T0) (41, _T0) (20, _T1) (28, _T1) (32, _T1) (41, _T18) ]
  liveOut = [ _T0 _T1 ]
  liveOutDU = [ (18, _T0) (41, _T0) (20, _T1) (28, _T1) (32, _T1) ]
    41 *(_T0 + 4) = _T18 [ _T0 _T1 ]
END BY RETURN, void result

