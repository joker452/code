FUNCTION _Main_New : 
BASIC BLOCK 0 : 
  Def     = [ _T0 _T1 _T2 ]
  defDU   = [ ]
  redef   = [ _T0 _T1 _T2 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ ]
  liveInDU = [ ]
  liveOut = [ ]
  liveOutDU = [ ]
    1 _T0 = 4 [ _T0 ]
    2 parm _T0 [ ]
    3 _T1 =  call _Alloc [ _T1 ]
    4 _T2 = VTBL <_Main> [ _T1 _T2 ]
    5 *(_T1 + 0) = _T2 [ _T1 ]
END BY RETURN, result = _T1

FUNCTION _A_New : 
BASIC BLOCK 0 : 
  Def     = [ _T3 _T4 _T5 ]
  defDU   = [ ]
  redef   = [ _T3 _T4 _T5 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ ]
  liveInDU = [ ]
  liveOut = [ ]
  liveOutDU = [ ]
    7 _T3 = 4 [ _T3 ]
    8 parm _T3 [ ]
    9 _T4 =  call _Alloc [ _T4 ]
    10 _T5 = VTBL <_A> [ _T4 _T5 ]
    11 *(_T4 + 0) = _T5 [ _T4 ]
END BY RETURN, result = _T4

FUNCTION main : 
BASIC BLOCK 0 : 
  Def     = [ _T6 _T7 _T10 _T11 ]
  defDU   = [ (25, _T6) (41, _T6) (18, _T10) (18, _T11) (20, _T11) ]
  redef   = [ _T6 _T7 _T10 _T11 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ ]
  liveInDU = [ ]
  liveOut = [ _T6 _T10 _T11 ]
  liveOutDU = [ (25, _T6) (41, _T6) (18, _T10) (18, _T11) (20, _T11) ]
    13 _T7 =  call _Main_New [ _T7 ]
    14 _T6 = _T7 [ _T6 ]
    15 _T10 = VTBL <_A> [ _T6 _T10 ]
    16 _T11 = *(_T6 + 0) [ _T6 _T10 _T11 ]
END BY BRANCH, goto 1
BASIC BLOCK 1 : 
  Def     = [ _T9 ]
  defDU   = [ ]
  redef   = [ _T9 ]
  liveUseDU = [ (18, _T10) (18, _T11) ]
  liveUse = [ _T10 _T11 ]
  liveIn  = [ _T6 _T10 _T11 ]
  liveInDU = [ (25, _T6) (41, _T6) (18, _T10) (18, _T11) (20, _T11) ]
  liveOut = [ _T6 _T10 _T11 ]
  liveOutDU = [ (25, _T6) (41, _T6) (18, _T10) (20, _T11) ]
    18 _T9 = (_T10 == _T11) [ _T6 _T9 _T10 _T11 ]
END BY BGTZ, if _T9 = 
    1 : goto 4; 0 : goto 2
BASIC BLOCK 2 : 
  Def     = [ ]
  defDU   = [ (18, _T11) (20, _T11) ]
  redef   = [ _T11 ]
  liveUseDU = [ (20, _T11) ]
  liveUse = [ _T11 ]
  liveIn  = [ _T6 _T10 _T11 ]
  liveInDU = [ (25, _T6) (41, _T6) (18, _T10) (20, _T11) ]
  liveOut = [ _T6 _T10 _T11 ]
  liveOutDU = [ (25, _T6) (41, _T6) (18, _T10) (18, _T11) (20, _T11) ]
    20 _T11 = *(_T11 + 0) [ _T6 _T10 _T11 ]
END BY BGTZ, if _T11 = 
    1 : goto 1; 0 : goto 3
BASIC BLOCK 3 : 
  Def     = [ _T12 _T13 _T14 _T15 _T16 _T17 _T18 ]
  defDU   = [ ]
  redef   = [ _T12 _T13 _T14 _T15 _T16 _T17 _T18 ]
  liveUseDU = [ (25, _T6) ]
  liveUse = [ _T6 ]
  liveIn  = [ _T6 ]
  liveInDU = [ (25, _T6) (41, _T6) ]
  liveOut = [ _T6 ]
  liveOutDU = [ (41, _T6) ]
    22 _T12 = "Decaf runtime error: " [ _T6 _T12 ]
    23 parm _T12 [ _T6 ]
    24 call _PrintString [ _T6 ]
    25 _T13 = *(_T6 + 0) [ _T6 _T13 ]
    26 _T14 = *(_T13 + 4) [ _T6 _T14 ]
    27 parm _T14 [ _T6 ]
    28 call _PrintString [ _T6 ]
    29 _T15 = " cannot be cast to " [ _T6 _T15 ]
    30 parm _T15 [ _T6 ]
    31 call _PrintString [ _T6 ]
    32 _T16 = VTBL <_A> [ _T16 _T6 ]
    33 _T17 = *(_T16 + 4) [ _T17 _T6 ]
    34 parm _T17 [ _T6 ]
    35 call _PrintString [ _T6 ]
    36 _T18 = "\n" [ _T18 _T6 ]
    37 parm _T18 [ _T6 ]
    38 call _PrintString [ _T6 ]
    39 call _Halt [ _T6 ]
END BY BRANCH, goto 4
BASIC BLOCK 4 : 
  Def     = [ _T8 ]
  defDU   = [ ]
  redef   = [ _T8 ]
  liveUseDU = [ (41, _T6) ]
  liveUse = [ _T6 ]
  liveIn  = [ _T6 ]
  liveInDU = [ (41, _T6) ]
  liveOut = [ ]
  liveOutDU = [ ]
    41 _T8 = _T6 [ ]
END BY RETURN, void result

