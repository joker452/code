FUNCTION _Main_New : 
BASIC BLOCK 0 : 
  Def     = [ _T4 _T5 _T6 _T7 ]
  defDU   = [ ]
  redef   = [ _T4 _T5 _T6 _T7 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ ]
  liveInDU = [ ]
  liveOut = [ ]
  liveOutDU = [ ]
    1 _T4 = 8 [ _T4 ]
    2 parm _T4 [ ]
    3 _T5 =  call _Alloc [ _T5 ]
    4 _T6 = 0 [ _T5 _T6 ]
    5 *(_T5 + 4) = _T6 [ _T5 ]
    6 _T7 = VTBL <_Main> [ _T5 _T7 ]
    7 *(_T5 + 0) = _T7 [ _T5 ]
END BY RETURN, result = _T5

FUNCTION _Hoo_New : 
BASIC BLOCK 0 : 
  Def     = [ _T8 _T9 _T10 ]
  defDU   = [ ]
  redef   = [ _T8 _T9 _T10 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ ]
  liveInDU = [ ]
  liveOut = [ ]
  liveOutDU = [ ]
    9 _T8 = 4 [ _T8 ]
    10 parm _T8 [ ]
    11 _T9 =  call _Alloc [ _T9 ]
    12 _T10 = VTBL <_Hoo> [ _T9 _T10 ]
    13 *(_T9 + 0) = _T10 [ _T9 ]
END BY RETURN, result = _T9

FUNCTION _Goo_New : 
BASIC BLOCK 0 : 
  Def     = [ _T11 _T12 _T13 ]
  defDU   = [ ]
  redef   = [ _T11 _T12 _T13 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ ]
  liveInDU = [ ]
  liveOut = [ ]
  liveOutDU = [ ]
    15 _T11 = 4 [ _T11 ]
    16 parm _T11 [ ]
    17 _T12 =  call _Alloc [ _T12 ]
    18 _T13 = VTBL <_Goo> [ _T12 _T13 ]
    19 *(_T12 + 0) = _T13 [ _T12 ]
END BY RETURN, result = _T12

FUNCTION main : 
BASIC BLOCK 0 : 
  Def     = [ _T14 _T15 _T16 _T17 _T18 _T19 _T20 _T21 _T22 _T23 _T25 _T26 ]
  defDU   = [ (46, _T14) (55, _T14) (71, _T14) (72, _T15) (37, _T25) (37, _T26) (39, _T26) ]
  redef   = [ _T14 _T15 _T16 _T17 _T18 _T19 _T20 _T21 _T22 _T23 _T25 _T26 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ ]
  liveInDU = [ ]
  liveOut = [ _T14 _T15 _T25 _T26 ]
  liveOutDU = [ (46, _T14) (55, _T14) (71, _T14) (72, _T15) (37, _T25) (37, _T26) (39, _T26) ]
    21 _T16 =  call _Main_New [ _T16 ]
    22 _T15 = _T16 [ _T15 ]
    23 _T17 = *(_T15 + 4) [ _T15 ]
    24 _T18 = 4 [ _T18 _T15 ]
    25 *(_T15 + 4) = _T18 [ _T15 ]
    26 _T19 =  call _Goo_New [ _T19 _T15 ]
    27 _T14 = _T19 [ _T14 _T15 ]
    28 _T20 = *(_T15 + 4) [ _T20 _T14 _T15 ]
    29 parm _T14 [ _T20 _T14 _T15 ]
    30 parm _T20 [ _T14 _T15 ]
    31 _T21 = *(_T14 + 0) [ _T21 _T14 _T15 ]
    32 _T22 = *(_T21 + 8) [ _T22 _T14 _T15 ]
    33 _T23 =  call _T22 [ _T14 _T15 ]
    34 _T25 = VTBL <_Goo> [ _T25 _T14 _T15 ]
    35 _T26 = *(_T14 + 0) [ _T25 _T26 _T14 _T15 ]
END BY BRANCH, goto 1
BASIC BLOCK 1 : 
  Def     = [ _T24 ]
  defDU   = [ (43, _T24) ]
  redef   = [ _T24 ]
  liveUseDU = [ (37, _T25) (37, _T26) ]
  liveUse = [ _T25 _T26 ]
  liveIn  = [ _T14 _T15 _T25 _T26 ]
  liveInDU = [ (46, _T14) (55, _T14) (71, _T14) (72, _T15) (37, _T25) (37, _T26) (39, _T26) ]
  liveOut = [ _T14 _T15 _T24 _T25 _T26 ]
  liveOutDU = [ (46, _T14) (55, _T14) (71, _T14) (72, _T15) (43, _T24) (37, _T25) (39, _T26) ]
    37 _T24 = (_T25 == _T26) [ _T24 _T25 _T26 _T14 _T15 ]
END BY BGTZ, if _T24 = 
    1 : goto 4; 0 : goto 2
BASIC BLOCK 2 : 
  Def     = [ ]
  defDU   = [ (37, _T26) (39, _T26) ]
  redef   = [ _T26 ]
  liveUseDU = [ (39, _T26) ]
  liveUse = [ _T26 ]
  liveIn  = [ _T14 _T15 _T25 _T26 ]
  liveInDU = [ (46, _T14) (55, _T14) (71, _T14) (72, _T15) (37, _T25) (39, _T26) ]
  liveOut = [ _T14 _T15 _T25 _T26 ]
  liveOutDU = [ (46, _T14) (55, _T14) (71, _T14) (72, _T15) (37, _T25) (37, _T26) (39, _T26) ]
    39 _T26 = *(_T26 + 0) [ _T25 _T26 _T14 _T15 ]
END BY BGTZ, if _T26 = 
    1 : goto 1; 0 : goto 3
BASIC BLOCK 3 : 
  Def     = [ _T24 ]
  defDU   = [ (43, _T24) ]
  redef   = [ _T24 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ _T14 _T15 ]
  liveInDU = [ (46, _T14) (55, _T14) (71, _T14) (72, _T15) ]
  liveOut = [ _T14 _T15 _T24 ]
  liveOutDU = [ (46, _T14) (55, _T14) (71, _T14) (72, _T15) (43, _T24) ]
    41 _T24 = 0 [ _T24 _T14 _T15 ]
END BY BRANCH, goto 4
BASIC BLOCK 4 : 
  Def     = [ _T29 _T30 ]
  defDU   = [ (48, _T29) (48, _T30) (50, _T30) ]
  redef   = [ _T29 _T30 ]
  liveUseDU = [ (46, _T14) (43, _T24) ]
  liveUse = [ _T14 _T24 ]
  liveIn  = [ _T14 _T15 _T24 ]
  liveInDU = [ (46, _T14) (55, _T14) (71, _T14) (72, _T15) (43, _T24) ]
  liveOut = [ _T14 _T15 _T29 _T30 ]
  liveOutDU = [ (55, _T14) (71, _T14) (72, _T15) (48, _T29) (48, _T30) (50, _T30) ]
    43 parm _T24 [ _T14 _T15 ]
    44 call _PrintBool [ _T14 _T15 ]
    45 _T29 = VTBL <_Goo> [ _T29 _T14 _T15 ]
    46 _T30 = *(_T14 + 0) [ _T29 _T14 _T30 _T15 ]
END BY BRANCH, goto 5
BASIC BLOCK 5 : 
  Def     = [ _T28 ]
  defDU   = [ ]
  redef   = [ _T28 ]
  liveUseDU = [ (48, _T29) (48, _T30) ]
  liveUse = [ _T29 _T30 ]
  liveIn  = [ _T14 _T15 _T29 _T30 ]
  liveInDU = [ (55, _T14) (71, _T14) (72, _T15) (48, _T29) (48, _T30) (50, _T30) ]
  liveOut = [ _T14 _T15 _T29 _T30 ]
  liveOutDU = [ (55, _T14) (71, _T14) (72, _T15) (48, _T29) (50, _T30) ]
    48 _T28 = (_T29 == _T30) [ _T28 _T29 _T14 _T30 _T15 ]
END BY BGTZ, if _T28 = 
    1 : goto 8; 0 : goto 6
BASIC BLOCK 6 : 
  Def     = [ ]
  defDU   = [ (48, _T30) (50, _T30) ]
  redef   = [ _T30 ]
  liveUseDU = [ (50, _T30) ]
  liveUse = [ _T30 ]
  liveIn  = [ _T14 _T15 _T29 _T30 ]
  liveInDU = [ (55, _T14) (71, _T14) (72, _T15) (48, _T29) (50, _T30) ]
  liveOut = [ _T14 _T15 _T29 _T30 ]
  liveOutDU = [ (55, _T14) (71, _T14) (72, _T15) (48, _T29) (48, _T30) (50, _T30) ]
    50 _T30 = *(_T30 + 0) [ _T29 _T14 _T30 _T15 ]
END BY BGTZ, if _T30 = 
    1 : goto 5; 0 : goto 7
BASIC BLOCK 7 : 
  Def     = [ _T31 _T32 _T33 _T34 _T35 _T36 _T37 ]
  defDU   = [ ]
  redef   = [ _T31 _T32 _T33 _T34 _T35 _T36 _T37 ]
  liveUseDU = [ (55, _T14) ]
  liveUse = [ _T14 ]
  liveIn  = [ _T14 _T15 ]
  liveInDU = [ (55, _T14) (71, _T14) (72, _T15) ]
  liveOut = [ _T14 _T15 ]
  liveOutDU = [ (71, _T14) (72, _T15) ]
    52 _T31 = "Decaf runtime error: " [ _T14 _T15 _T31 ]
    53 parm _T31 [ _T14 _T15 ]
    54 call _PrintString [ _T14 _T15 ]
    55 _T32 = *(_T14 + 0) [ _T32 _T14 _T15 ]
    56 _T33 = *(_T32 + 4) [ _T33 _T14 _T15 ]
    57 parm _T33 [ _T14 _T15 ]
    58 call _PrintString [ _T14 _T15 ]
    59 _T34 = " cannot be cast to " [ _T34 _T14 _T15 ]
    60 parm _T34 [ _T14 _T15 ]
    61 call _PrintString [ _T14 _T15 ]
    62 _T35 = VTBL <_Goo> [ _T35 _T14 _T15 ]
    63 _T36 = *(_T35 + 4) [ _T36 _T14 _T15 ]
    64 parm _T36 [ _T14 _T15 ]
    65 call _PrintString [ _T14 _T15 ]
    66 _T37 = "\n" [ _T37 _T14 _T15 ]
    67 parm _T37 [ _T14 _T15 ]
    68 call _PrintString [ _T14 _T15 ]
    69 call _Halt [ _T14 _T15 ]
END BY BRANCH, goto 8
BASIC BLOCK 8 : 
  Def     = [ _T27 _T38 _T39 _T40 _T41 ]
  defDU   = [ ]
  redef   = [ _T27 _T38 _T39 _T40 _T41 ]
  liveUseDU = [ (71, _T14) (72, _T15) ]
  liveUse = [ _T14 _T15 ]
  liveIn  = [ _T14 _T15 ]
  liveInDU = [ (71, _T14) (72, _T15) ]
  liveOut = [ ]
  liveOutDU = [ ]
    71 _T27 = _T14 [ _T27 _T15 ]
    72 _T38 = *(_T15 + 4) [ _T38 _T27 ]
    73 parm _T27 [ _T38 _T27 ]
    74 parm _T38 [ _T27 ]
    75 _T39 = *(_T27 + 0) [ _T39 ]
    76 _T40 = *(_T39 + 8) [ _T40 ]
    77 _T41 =  call _T40 [ ]
END BY RETURN, void result

FUNCTION _Hoo.printNumbers : 
BASIC BLOCK 0 : 
  Def     = [ _T43 _T44 ]
  defDU   = [ ]
  redef   = [ _T43 _T44 ]
  liveUseDU = [ (80, _T1) ]
  liveUse = [ _T1 ]
  liveIn  = [ _T1 ]
  liveInDU = [ (80, _T1) (88, _T1) ]
  liveOut = [ _T1 ]
  liveOutDU = [ (88, _T1) ]
    79 _T43 = 10 [ _T1 _T43 ]
    80 _T44 = (_T43 < _T1) [ _T1 _T44 ]
END BY BEQZ, if _T44 = 
    0 : goto 2; 1 : goto 1
BASIC BLOCK 1 : 
  Def     = [ _T1 _T45 ]
  defDU   = [ (88, _T1) ]
  redef   = [ _T1 _T45 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ ]
  liveInDU = [ ]
  liveOut = [ _T1 ]
  liveOutDU = [ (88, _T1) ]
    82 _T45 = 10 [ _T45 ]
    83 _T1 = _T45 [ _T1 ]
END BY BRANCH, goto 2
BASIC BLOCK 2 : 
  Def     = [ _T42 _T46 ]
  defDU   = [ (88, _T42) (90, _T42) (93, _T42) (99, _T42) ]
  redef   = [ _T42 _T46 ]
  liveUseDU = [ ]
  liveUse = [ ]
  liveIn  = [ _T1 ]
  liveInDU = [ (88, _T1) ]
  liveOut = [ _T1 _T42 ]
  liveOutDU = [ (88, _T1) (88, _T42) (90, _T42) (93, _T42) (99, _T42) ]
    85 _T46 = 0 [ _T1 _T46 ]
    86 _T42 = _T46 [ _T1 _T42 ]
END BY BRANCH, goto 3
BASIC BLOCK 3 : 
  Def     = [ _T47 ]
  defDU   = [ ]
  redef   = [ _T47 ]
  liveUseDU = [ (88, _T1) (88, _T42) ]
  liveUse = [ _T1 _T42 ]
  liveIn  = [ _T1 _T42 ]
  liveInDU = [ (88, _T1) (88, _T42) (90, _T42) (93, _T42) (99, _T42) ]
  liveOut = [ _T1 _T42 ]
  liveOutDU = [ (88, _T1) (90, _T42) (93, _T42) (99, _T42) ]
    88 _T47 = (_T42 < _T1) [ _T1 _T42 _T47 ]
END BY BEQZ, if _T47 = 
    0 : goto 5; 1 : goto 4
BASIC BLOCK 4 : 
  Def     = [ _T48 _T49 ]
  defDU   = [ (88, _T42) (90, _T42) (93, _T42) (99, _T42) ]
  redef   = [ _T42 _T48 _T49 ]
  liveUseDU = [ (90, _T42) (93, _T42) ]
  liveUse = [ _T42 ]
  liveIn  = [ _T1 _T42 ]
  liveInDU = [ (88, _T1) (90, _T42) (93, _T42) ]
  liveOut = [ _T1 _T42 ]
  liveOutDU = [ (88, _T1) (88, _T42) (90, _T42) (93, _T42) (99, _T42) ]
    90 parm _T42 [ _T1 _T42 ]
    91 call _PrintInt [ _T1 _T42 ]
    92 _T48 = 2 [ _T48 _T1 _T42 ]
    93 _T49 = (_T42 * _T48) [ _T1 _T49 ]
    94 _T42 = _T49 [ _T1 _T42 ]
END BY BRANCH, goto 3
BASIC BLOCK 5 : 
  Def     = [ _T50 ]
  defDU   = [ ]
  redef   = [ _T50 ]
  liveUseDU = [ (99, _T42) ]
  liveUse = [ _T42 ]
  liveIn  = [ _T42 ]
  liveInDU = [ (99, _T42) ]
  liveOut = [ ]
  liveOutDU = [ ]
    96 _T50 = "\n" [ _T50 _T42 ]
    97 parm _T50 [ _T42 ]
    98 call _PrintString [ _T42 ]
END BY RETURN, result = _T42

FUNCTION _Goo.printNumbers : 
BASIC BLOCK 0 : 
  Def     = [ _T51 ]
  defDU   = [ ]
  redef   = [ _T51 ]
  liveUseDU = [ (100, _T3) ]
  liveUse = [ _T3 ]
  liveIn  = [ _T3 ]
  liveInDU = [ (100, _T3) ]
  liveOut = [ ]
  liveOutDU = [ ]
    100 parm _T3 [ ]
    101 call _PrintInt [ ]
    102 _T51 = 1 [ _T51 ]
END BY RETURN, result = _T51

